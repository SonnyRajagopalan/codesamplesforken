/*
 * Java code generated by beanGenerator.py
 * 02.20.2016
 * Sonny Rajagopalan/Pacifi, Inc.
 * Copyright, Pacifi, Inc.
 *
 * The class for describing a currently active call.
 */
package com.hola.serverSide.ariApplication.db.beans;
/*
 * Import statements 
 */
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ActiveCall
{
	private String  UUID; // The UUID of the call.
	private String  callerChannel; // The currently used caller channel for the call.
	private String  callerID; // The currently used caller ID for the call.
	private String  callerHandle; // The currently used caller handle for the call.
	private String  calleeChannel; // The currently used callee channel for the call.
	private String  calleeID; // The currently used callee ID for the call.
	private String  calleeHandle; // The currently used callee handle for the call.
	private boolean zombie; // The current zombie status of the call. A call becomes a zombie as a result of at least one participant indicating that she wishes to leave.
	private static final ObjectMapper objectMapper = new ObjectMapper ();



	/*
	 * Constructors
	 * Empty/default (see 
	 *   http://stackoverflow.com/questions/7625783/jsonmappingexception-no-suitable-constructor-found-for-type-simple-type-class
	 * full, and partial (for derived classes)
	 *
	 */
	public ActiveCall ()
	{
	   // For Jackson ObjectMapper's sanity!
	}
	public ActiveCall (String _UUID, String _callerChannel, String _callerID, String _callerHandle, String _calleeChannel, String _calleeID, String _calleeHandle, boolean _zombie)
	{
		this.UUID          = _UUID;
		this.callerChannel = _callerChannel;
		this.callerID      = _callerID;
		this.callerHandle  = _callerHandle;
		this.calleeChannel = _calleeChannel;
		this.calleeID      = _calleeID;
		this.calleeHandle  = _calleeHandle;
		this.zombie        = _zombie;
	}
	/*
	 * Setters
	 */
	@JsonProperty ("UUID")
	public void setUUID (String _UUID)
	{
		this.UUID = _UUID;
	}


	@JsonProperty ("callerChannel")
	public void setCallerChannel (String _callerChannel)
	{
		this.callerChannel = _callerChannel;
	}


	@JsonProperty ("callerID")
	public void setCallerID (String _callerID)
	{
		this.callerID = _callerID;
	}


	@JsonProperty ("callerHandle")
	public void setCallerHandle (String _callerHandle)
	{
		this.callerHandle = _callerHandle;
	}


	@JsonProperty ("calleeChannel")
	public void setCalleeChannel (String _calleeChannel)
	{
		this.calleeChannel = _calleeChannel;
	}


	@JsonProperty ("calleeID")
	public void setCalleeID (String _calleeID)
	{
		this.calleeID = _calleeID;
	}


	@JsonProperty ("calleeHandle")
	public void setCalleeHandle (String _calleeHandle)
	{
		this.calleeHandle = _calleeHandle;
	}


	@JsonProperty ("zombie")
	public void setZombie (boolean _zombie)
	{
		this.zombie = _zombie;
	}


	/*
	 * Getters
	 */
	@JsonProperty ("UUID")
	public String getUUID ()
	{
		return this.UUID;
	}


	@JsonProperty ("callerChannel")
	public String getCallerChannel ()
	{
		return this.callerChannel;
	}


	@JsonProperty ("callerID")
	public String getCallerID ()
	{
		return this.callerID;
	}


	@JsonProperty ("callerHandle")
	public String getCallerHandle ()
	{
		return this.callerHandle;
	}


	@JsonProperty ("calleeChannel")
	public String getCalleeChannel ()
	{
		return this.calleeChannel;
	}


	@JsonProperty ("calleeID")
	public String getCalleeID ()
	{
		return this.calleeID;
	}


	@JsonProperty ("calleeHandle")
	public String getCalleeHandle ()
	{
		return this.calleeHandle;
	}


	@JsonProperty ("zombie")
	public boolean getZombie ()
	{
		return this.zombie;
	}


	/*
	 * Override of toString() to help debug, log etc.
	 */
	@Override
	public String toString ()
	{
		return "UUID: " + UUID+ " " + "callerChannel: " + callerChannel+ " " + "callerID: " + callerID+ " " + "callerHandle: " + callerHandle+ " " + "calleeChannel: " + calleeChannel+ " " + "calleeID: " + calleeID+ " " + "calleeHandle: " + calleeHandle+ " " + "zombie: " + zombie;
	}
	/*
	 * get JSON string object
	 */
	public String toJsonString ()
	{
		String thisBeanAsJson = null;
		try
		{
			thisBeanAsJson = objectMapper.writeValueAsString (this);
		}
		catch (JsonProcessingException e)
		{
			e.printStackTrace ();
		}
		finally
		{
			return thisBeanAsJson;
		}
	}
}
