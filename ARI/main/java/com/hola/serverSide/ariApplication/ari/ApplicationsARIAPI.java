/*
 * This source code file is the property of Pacifi, Inc.
 * Copyright: 2015-2016.
 * All rights reserved.  
 * 
 * @author: Sonny Rajagopalan
 * @copyright: Pacifi, Inc.
 */
package com.hola.serverSide.ariApplication.ari;
/*
 * Java code generated by apiGenerator.py
 * 10.17.2015
 * Sonny Rajagopalan/Pacifi, Inc.
 * Copyright, Pacifi, Inc.
 *
 * The Applications ARI API. See https://wiki.asterisk.org/wiki/display/AST/Asterisk+13+Applications+REST+API for details.
 */

import com.sun.jersey.api.client.ClientResponse;
/*
 * Logging
*/
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ApplicationsARIAPI
{
	// Logging
	private static final Logger log = LoggerFactory.getLogger (ApplicationsARIAPI.class.getName ());
	/**
	 *
	 * list: List all applications.
	 *
	*/
	public static ClientResponse list ()
	{
		String RESTURLToUse = "/applications";

		ClientResponse httpResponse = HTTPAPIForARI.get (RESTURLToUse);
		if (httpResponse.getStatus () == 200)
		{
			log.debug ("No errors caught in call to /applications");
		}
		return httpResponse;
	}

	/**
	 *
	 * get: Get details of an application.
	 *
	 *
	 * Path parameters:
	 * @param applicationName: String: Application's name
	 *
	 * Errors caught:
	 * HTTP Error code 404: Application does not exist.
	*/
	public static ClientResponse get (String applicationName)
	{
		String RESTURLToUse = "/applications/{applicationName}";

		// Correct URI using path params
		RESTURLToUse = RESTURLToUse.replace ("{applicationName}", applicationName);
		ClientResponse httpResponse = HTTPAPIForARI.get (RESTURLToUse);
		if (httpResponse.getStatus () == 404)
		{
			log.error ("Application does not exist.");
		}
		return httpResponse;
	}

	/**
	 *
	 * subscribe: Subscribe an application to a event source. Returns the state of the application after the
	 *                 subscriptions have changed
	 *
	 *
	 * Query parameters:
	 * @param eventSource: String:  (required) URI for event 
	 *                 source (channel:{channelId}, bridge:{bridgeId}, endpoint:{tech}[/{resource}], deviceState:{deviceName}. 
	 *                 Allows comma separated values.
	 *
	 * Path parameters:
	 * @param applicationName: String: Application's name
	 *
	 * Errors caught:
	 * HTTP Error code 400: Missing parameter.
	 * HTTP Error code 404: Application does not exist.
	 * HTTP Error code 422: Event source does not exist.
	*/
	public static ClientResponse subscribe (String applicationName, String query)
	{
		String RESTURLToUse = "/applications/{applicationName}/subscription";

		// Correct URI using path params
		RESTURLToUse = RESTURLToUse.replace ("{applicationName}", applicationName);
		ClientResponse httpResponse = HTTPAPIForARI.post (RESTURLToUse, query);
		if (httpResponse.getStatus () == 400)
		{
			log.error ("Missing parameter.");
		}
		if (httpResponse.getStatus () == 404)
		{
			log.error ("Application does not exist.");
		}
		if (httpResponse.getStatus () == 422)
		{
			log.error ("Event source does not exist.");
		}
		return httpResponse;
	}

	/**
	 *
	 * unsubscribe: Unsubscribe an application from an event source. Returns the state of the application after the subscriptions have changed
	 *
	 *
	 * Query parameters:
	 * @param eventSource: String: (required) URI for event source (channel
	 *
	 * Path parameters:
	 * @param applicationName: String: Application's name
	 *
	 * Errors caught:
	 * HTTP Error code 400: Missing parameter; event source scheme not recognized.
	 * HTTP Error code 404: Application does not exist.
	 * HTTP Error code 409: Application not subscribed to event source.
	 * HTTP Error code 422: Event source does not exist.
	*/
	public static ClientResponse unsubscribe (String applicationName, String query)
	{
		String RESTURLToUse = "/applications/{applicationName}/subscription";

		// Correct URI using path params
		RESTURLToUse = RESTURLToUse.replace ("{applicationName}", applicationName);
		ClientResponse httpResponse = HTTPAPIForARI.delete (RESTURLToUse, query);
		if (httpResponse.getStatus () == 400)
		{
			log.error ("Missing parameter; event source scheme not recognized.");
		}
		if (httpResponse.getStatus () == 404)
		{
			log.error ("Application does not exist.");
		}
		if (httpResponse.getStatus () == 409)
		{
			log.error ("Application not subscribed to event source.");
		}
		if (httpResponse.getStatus () == 422)
		{
			log.error ("Event source does not exist.");
		}
		return httpResponse;
	}

}
