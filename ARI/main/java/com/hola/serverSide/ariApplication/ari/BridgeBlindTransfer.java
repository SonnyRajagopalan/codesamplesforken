/*
 * This source code file is the property of Pacifi, Inc.
 * Copyright: 2015-2016.
 * All rights reserved.  
 * 
 * @author: Sonny Rajagopalan
 * @copyright: Pacifi, Inc.
 */
/*
 * Java code autogenerated by beanGenerator.py
 * 10.06.2015
 * Sonny Rajagopalan/Pacifi, Inc.
 * Copyright, Pacifi, Inc.
 *
 * (Derived from Event object) Notification that a blind transfer has occurred.
 */
package com.hola.serverSide.ariApplication.ari;
/*
 * Import statements 
 */
import java.sql.Timestamp;

public class BridgeBlindTransfer extends Event
{
	private Bridge    bridge; // (optional) The bridge being transferred
	private Channel   channel; // The channel performing the blind transfer
	private String    context; // The context transferred to
	private String    exten; // The extension transferred to
	private boolean   is_external; // Whether the transfer was externally initiated or not
	private Channel   replace_channel; // (optional) The channel that is replacing transferer when the transferee(s) can not be transferred directly
	private String    result; // The result of the transfer attempt
	private Channel   transferee; // (optional) The channel that is being transferred


	/*
	 * Constructors
	 * Empty/default (see 
	 *   http://stackoverflow.com/questions/7625783/jsonmappingexception-no-suitable-constructor-found-for-type-simple-type-class
	 * full, and partial (for derived classes)
	 *
	 */
	public BridgeBlindTransfer ()
	{
	   // For Jackson ObjectMapper's sanity!
	}
	public BridgeBlindTransfer (String _type, String _application, Timestamp _timestamp, Bridge _bridge, Channel _channel, String _context, String _exten, boolean _is_external, Channel _replace_channel, String _result, Channel _transferee)
	{
		super (_type, _application, _timestamp);
		this.bridge          = _bridge;
		this.channel         = _channel;
		this.context         = _context;
		this.exten           = _exten;
		this.is_external     = _is_external;
		this.replace_channel = _replace_channel;
		this.result          = _result;
		this.transferee      = _transferee;
	}
	/*
	 * Setters
	 */
	public void setBridge (Bridge _bridge)
	{
		this.bridge = _bridge;
	}


	public void setChannel (Channel _channel)
	{
		this.channel = _channel;
	}


	public void setContext (String _context)
	{
		this.context = _context;
	}


	public void setExten (String _exten)
	{
		this.exten = _exten;
	}


	public void setIs_external (boolean _is_external)
	{
		this.is_external = _is_external;
	}


	public void setReplace_channel (Channel _replace_channel)
	{
		this.replace_channel = _replace_channel;
	}


	public void setResult (String _result)
	{
		this.result = _result;
	}


	public void setTransferee (Channel _transferee)
	{
		this.transferee = _transferee;
	}


	/*
	 * Getters
	 */
	public Bridge getBridge ()
	{
		return this.bridge;
	}


	public Channel getChannel ()
	{
		return this.channel;
	}


	public String getContext ()
	{
		return this.context;
	}


	public String getExten ()
	{
		return this.exten;
	}


	public boolean getIs_external ()
	{
		return this.is_external;
	}


	public Channel getReplace_channel ()
	{
		return this.replace_channel;
	}


	public String getResult ()
	{
		return this.result;
	}


	public Channel getTransferee ()
	{
		return this.transferee;
	}


}
