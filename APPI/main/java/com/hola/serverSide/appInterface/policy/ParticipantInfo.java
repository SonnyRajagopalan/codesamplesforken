/*
 * Java code generated by beanGenerator.py
 * 01.15.2016
 * Sonny Rajagopalan/Pacifi, Inc.
 * Copyright, Pacifi, Inc.
 *
 * The call participant information.
 */
package com.hola.serverSide.appInterface.policy;

import java.time.LocalTime;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.core.JsonProcessingException;
/*
 * Hola specific import statements 
 */
import com.hola.serverSide.appInterface.call.Location;

public class ParticipantInfo
{
	private String        ID; // The numeric userID for employees (e.g., "6001" for Sonny). For non employees this is the handle that is being considered for the call participant.
	private LocalTime currentTime; // The current timestamp at the call participant.
	private Location      location; // The location information for the call participant.


	/*
	 * Constructors
	 * Empty/default (see 
	 *   http://stackoverflow.com/questions/7625783/jsonmappingexception-no-suitable-constructor-found-for-type-simple-type-class
	 * full, and partial (for derived classes)
	 *
	 */
	public ParticipantInfo ()
	{
	   // For Jackson ObjectMapper's sanity!
	}
	public ParticipantInfo (String _ID, LocalTime _currentTime, Location _location)
	{
		this.ID              = _ID;
		this.currentTime = _currentTime;
		this.location        = _location;
	}
	/*
	 * Setters
	 */
	public void setID (String _ID)
	{
		this.ID = _ID;
	}


	public void setCurrentTime (LocalTime _currentTime)
	{
		this.currentTime = _currentTime;
	}


	public void setLocation (Location _location)
	{
		this.location = _location;
	}


	/*
	 * Getters
	 */
	public String getID ()
	{
		return this.ID;
	}


	public LocalTime getCurrentTime ()
	{
		return this.currentTime;
	}


	public Location getLocation ()
	{
		return this.location;
	}


	/*
	 * Override of toString() to help debug, log etc.
	 */
	@Override
	public String toString ()
	{
		return "ID: " + ID+ " " + "currentTime: " + currentTime+ " " + "location: " + location;
	}
	/*
	 * get JSON string object
	 */
	public String toJsonString ()
	{
		ObjectMapper mapper = new ObjectMapper ();
		String thisBeanAsJson = null;
		try
		{
			thisBeanAsJson = mapper.writeValueAsString (this);
		}
		catch (JsonProcessingException e)
		{
			e.printStackTrace ();
		}
		finally
		{
			return thisBeanAsJson;
		}
	}
}
