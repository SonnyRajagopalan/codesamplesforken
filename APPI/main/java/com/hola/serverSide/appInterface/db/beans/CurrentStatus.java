/*
 * Java code generated by beanGenerator.py
 * 02.19.2016
 * Sonny Rajagopalan/Pacifi, Inc.
 * Copyright, Pacifi, Inc.
 *
 * The current status of the user's handles, as pushed by the user to the Hola! cloud.
 */
package com.hola.serverSide.appInterface.db.beans;
/*
 * Import statements 
 */
import java.io.IOException;
import java.util.List;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
/*
 * Hola! specific
 */
import com.hola.serverSide.appInterface.appi.HandleStatus;

public class CurrentStatus
{
	private String  usernameOrEmail; // The username or email that is used to login to the Hola! system.
	private int     extension; // The integer extension number that the user is assigned to.
	private boolean doNotDisturb; // The Do Not Disturb status of the user. If true, then the user is not to be disturbed.
	private boolean voice; // The voice status of the user. If false, then the user is not to be disturbed over voice.
	private boolean text; // The text status of the user. If false, then the user is not to be disturbed over text.
	private boolean video; // The video status of the user. If false, then the user is not to be disturbed over video.
	private int     updateCount; // The number of times this field was updated by the Hola! user.
	private static final ObjectMapper objectMapper = new ObjectMapper ();



	/*
	 * Constructors
	 * Empty/default (see 
	 *   http://stackoverflow.com/questions/7625783/jsonmappingexception-no-suitable-constructor-found-for-type-simple-type-class
	 * full, and partial (for derived classes)
	 *
	 */
	public CurrentStatus ()
	{
	   // For Jackson ObjectMapper's sanity!
	}
	public CurrentStatus (String _usernameOrEmail, int _extension, boolean _doNotDisturb, boolean _voice, boolean _text, boolean _video, int _updateCount)
	{
		this.usernameOrEmail = _usernameOrEmail;
		this.extension       = _extension;
		this.doNotDisturb    = _doNotDisturb;
		this.voice           = _voice;
		this.text            = _text;
		this.video           = _video;
		this.updateCount     = _updateCount;
	}
	/*
	 * Setters
	 */
	@JsonProperty ("usernameOrEmail")
	public void setUsernameOrEmail (String _usernameOrEmail)
	{
		this.usernameOrEmail = _usernameOrEmail;
	}


	@JsonProperty ("extension")
	public void setExtension (int _extension)
	{
		this.extension = _extension;
	}


	@JsonProperty ("doNotDisturb")
	public void setDoNotDisturb (boolean _doNotDisturb)
	{
		this.doNotDisturb = _doNotDisturb;
	}


	@JsonProperty ("voice")
	public void setVoice (boolean _voice)
	{
		this.voice = _voice;
	}


	@JsonProperty ("text")
	public void setText (boolean _text)
	{
		this.text = _text;
	}


	@JsonProperty ("video")
	public void setVideo (boolean _video)
	{
		this.video = _video;
	}


	@JsonProperty ("updateCount")
	public void setUpdateCount (int _updateCount)
	{
		this.updateCount = _updateCount;
	}


	/*
	 * Getters
	 */
	@JsonProperty ("usernameOrEmail")
	public String getUsernameOrEmail ()
	{
		return this.usernameOrEmail;
	}


	@JsonProperty ("extension")
	public int getExtension ()
	{
		return this.extension;
	}


	@JsonProperty ("doNotDisturb")
	public boolean getDoNotDisturb ()
	{
		return this.doNotDisturb;
	}


	@JsonProperty ("voice")
	public boolean getVoice ()
	{
		return this.voice;
	}


	@JsonProperty ("text")
	public boolean getText ()
	{
		return this.text;
	}


	@JsonProperty ("video")
	public boolean getVideo ()
	{
		return this.video;
	}


	@JsonProperty ("updateCount")
	public int getUpdateCount ()
	{
		return this.updateCount;
	}

   // public boolean getStatusForApp (String app)
   //  {
   // 	try
   // 	    {
   // 		List <HandleStatus> handleStatusesJsonList = objectMapper.readValue (this.handleStatuses, 
   // 									       new TypeReference<List <HandleStatus>> () {});

   // 		for (HandleStatus handleStatus: handleStatusesJsonList)
   // 		    {
   // 			if (handleStatus.getApp ().toLowerCase ().equals (app.toLowerCase ()))
   // 			    {
   // 				return handleStatus.getStatus ();
   // 			    }
   // 		    }
   // 		return false;
   // 	    }
   // 	catch (IOException e)
   // 	    {
   // 		e.printStackTrace ();
   // 	    }
   // 	return false;
   //  }
	/*
	 * Override of toString() to help debug, log etc.
	 */
	@Override
	public String toString ()
	{
		return "usernameOrEmail: " + usernameOrEmail+ " " + "extension: " + extension+ " " + "doNotDisturb: " + doNotDisturb+ " " + "voice: " + voice+ " " + "text: " + text+ " " + "video: " + video+ " " + "updateCount: " + updateCount;
	}
	/*
	 * get JSON string object
	 */
	public String toJsonString ()
	{
		String thisBeanAsJson = null;
		try
		{
			thisBeanAsJson = objectMapper.writeValueAsString (this);
		}
		catch (JsonProcessingException e)
		{
			e.printStackTrace ();
		}
		finally
		{
			return thisBeanAsJson;
		}
	}
}
