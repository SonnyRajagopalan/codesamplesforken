/*
 * Java code generated by beanGenerator.py
 * 02.27.2016
 * Sonny Rajagopalan/Pacifi, Inc.
 * Copyright, Pacifi, Inc.
 *
 * The APPI peer device.
 */
package com.hola.serverSide.appInterface.peer;
/*
 * Import statements 
 */
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Device
{
	private String UUID; // The UUID of the APPIPeerState associated with this device.
	private String name; // The device name of this endpoint. E.g., hostname of this device
	private String type; // The device type of this endpoint. E.g., Phone, tablet, desktop etc.
	private String model; // The device model. E.g., iPhone 6S plus, OnePlus 1+ etc.
	private String osType; // The OS type of this endpoint. E.g., iOS, Android, Windows Mobile, Cyanogen Mod, Ubuntu etc.
	private String osVersion; // The OS version of this endpoint. E.g., OSX 10.10.2, iOS 9.2.1, Android 5.5.2, Cyanogen Mod 12.1 etc.
	private static final ObjectMapper objectMapper = new ObjectMapper ();



	/*
	 * Constructors
	 * Empty/default (see 
	 *   http://stackoverflow.com/questions/7625783/jsonmappingexception-no-suitable-constructor-found-for-type-simple-type-class
	 * full, and partial (for derived classes)
	 *
	 */
	public Device ()
	{
	   // For Jackson ObjectMapper's sanity!
	}
	public Device (String _UUID, String _name, String _type, String _model, String _osType, String _osVersion)
	{
		this.UUID      = _UUID;
		this.name      = _name;
		this.type      = _type;
		this.model     = _model;
		this.osType    = _osType;
		this.osVersion = _osVersion;
	}
	/*
	 * Setters
	 */
	@JsonProperty ("UUID")
	public void setUUID (String _UUID)
	{
		this.UUID = _UUID;
	}


	@JsonProperty ("name")
	public void setName (String _name)
	{
		this.name = _name;
	}


	@JsonProperty ("type")
	public void setType (String _type)
	{
		this.type = _type;
	}


	@JsonProperty ("model")
	public void setModel (String _model)
	{
		this.model = _model;
	}


	@JsonProperty ("osType")
	public void setOsType (String _osType)
	{
		this.osType = _osType;
	}


	@JsonProperty ("osVersion")
	public void setOsVersion (String _osVersion)
	{
		this.osVersion = _osVersion;
	}


	/*
	 * Getters
	 */
	@JsonProperty ("UUID")
	public String getUUID ()
	{
		return this.UUID;
	}


	@JsonProperty ("name")
	public String getName ()
	{
		return this.name;
	}


	@JsonProperty ("type")
	public String getType ()
	{
		return this.type;
	}


	@JsonProperty ("model")
	public String getModel ()
	{
		return this.model;
	}


	@JsonProperty ("osType")
	public String getOsType ()
	{
		return this.osType;
	}


	@JsonProperty ("osVersion")
	public String getOsVersion ()
	{
		return this.osVersion;
	}


	/*
	 * Override of toString() to help debug, log etc.
	 */
	@Override
	public String toString ()
	{
		return "UUID: " + UUID+ " " + "name: " + name+ " " + "type: " + type+ " " + "model: " + model+ " " + "osType: " + osType+ " " + "osVersion: " + osVersion;
	}
	/*
	 * get JSON string object
	 */
	public String toJsonString ()
	{
		String thisBeanAsJson = null;
		try
		{
			thisBeanAsJson = objectMapper.writeValueAsString (this);
		}
		catch (JsonProcessingException e)
		{
			e.printStackTrace ();
		}
		finally
		{
			return thisBeanAsJson;
		}
	}
}
