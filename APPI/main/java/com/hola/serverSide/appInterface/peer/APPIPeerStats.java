/*
 * Java code generated by beanGenerator.py
 * 02.27.2016
 * Sonny Rajagopalan/Pacifi, Inc.
 * Copyright, Pacifi, Inc.
 *
 * The APPI peer stats.
 */
package com.hola.serverSide.appInterface.peer;
/*
 * Import statements 
 */
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.annotation.JsonProperty;

public class APPIPeerStats
{
    private String UUID; // The UUID of the APPIPeerState associated with this peer.
    private int    numStatusUpdateReceived; // The number of status updates received from app..
    private int    numReachabilityRequestsReceived; // The number of reachability requests that were received from app.
    private int    numReachabilityUpdatesSent; // The number of reachability updates that were sent to app.
    private static final ObjectMapper objectMapper = new ObjectMapper ();



    /*
     * Constructors
     * Empty/default (see 
     *   http://stackoverflow.com/questions/7625783/jsonmappingexception-no-suitable-constructor-found-for-type-simple-type-class
     * full, and partial (for derived classes)
     *
     */
    public APPIPeerStats ()
    {
	// For Jackson ObjectMapper's sanity!
    }
    public APPIPeerStats (String _UUID)
    {
	this.UUID                            = _UUID;
	this.numStatusUpdateReceived         = 0;
	this.numReachabilityRequestsReceived = 0;
	this.numReachabilityUpdatesSent      = 0;
    }
    /*
     * Setters
     */
    @JsonProperty ("UUID")
    public void setUUID (String _UUID)
    {
	this.UUID = _UUID;
    }


    @JsonProperty ("numStatusUpdateReceived")
    public void setNumStatusUpdateReceived (int _numStatusUpdateReceived)
    {
	this.numStatusUpdateReceived = _numStatusUpdateReceived;
    }

    public void incNumStatusUpdateReceived ()
    {
	this.numStatusUpdateReceived ++;
    }


    @JsonProperty ("numReachabilityRequestsReceived")
    public void setNumReachabilityRequestsReceived (int _numReachabilityRequestsReceived)
    {
	this.numReachabilityRequestsReceived = _numReachabilityRequestsReceived;
    }

    public void incNumReachabilityRequestsReceived ()
    {
	this.numReachabilityRequestsReceived ++;
    }

    @JsonProperty ("numReachabilityUpdatesSent")
    public void setNumReachabilityUpdatesSent (int _numReachabilityUpdatesSent)
    {
	this.numReachabilityUpdatesSent = _numReachabilityUpdatesSent;
    }

    public void incNumReachabilityUpdatesSent ()
    {
	this.numReachabilityUpdatesSent ++;
    }

    /*
     * Getters
     */
    @JsonProperty ("UUID")
    public String getUUID ()
    {
	return this.UUID;
    }


    @JsonProperty ("numStatusUpdateReceived")
    public int getNumStatusUpdateReceived ()
    {
	return this.numStatusUpdateReceived;
    }


    @JsonProperty ("numReachabilityRequestsReceived")
    public int getNumReachabilityRequestsReceived ()
    {
	return this.numReachabilityRequestsReceived;
    }


    @JsonProperty ("numReachabilityUpdatesSent")
    public int getNumReachabilityUpdatesSent ()
    {
	return this.numReachabilityUpdatesSent;
    }

    /*
     * Override of toString() to help debug, log etc.
     */
    @Override
    public String toString ()
    {
	return "UUID: " + UUID+ " " + "numStatusUpdateReceived: " + numStatusUpdateReceived+ " " + "numReachabilityRequestsReceived: " + numReachabilityRequestsReceived+ " " + "numReachabilityUpdatesSent: " + numReachabilityUpdatesSent;
    }
    /*
     * get JSON string object
     */
    public String toJsonString ()
    {
	String thisBeanAsJson = null;
	try
	    {
		thisBeanAsJson = objectMapper.writeValueAsString (this);
	    }
	catch (JsonProcessingException e)
	    {
		e.printStackTrace ();
	    }
	finally
	    {
		return thisBeanAsJson;
	    }
    }
}
