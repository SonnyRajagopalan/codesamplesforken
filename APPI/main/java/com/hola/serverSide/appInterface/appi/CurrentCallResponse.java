/*
 * Java code generated by beanGenerator.py
 * 02.29.2016
 * Sonny Rajagopalan/Pacifi, Inc.
 * Copyright, Pacifi, Inc.
 *
 * (Derived from APPIEvent object) Sent for passing information regarding current calls ongoing.
 */
package com.hola.serverSide.appInterface.appi;
/*
 * Import statements 
 */
import com.fasterxml.jackson.annotation.JsonProperty;

public class CurrentCallResponse extends APPIEvent
{
	private String callTechnology; // The technology being used for the current call. Blank if there is no current call. Options include pstn, voip etc.
	private String handoverTechnology; // The technology that should be used for the current call. Blank if there is no current call. Options include pstn, voip etc.
	private String handoverNumber; // A call should be made to this number using the callTechnology to effect a handover. Blank if there is no current call.
	private String metadata; // Optional data (for the moment, only DTMF) to pass if this is necessary for the handover to be performed. Blank if there is no current call.



	/*
	 * Constructors
	 * Empty/default (see 
	 *   http://stackoverflow.com/questions/7625783/jsonmappingexception-no-suitable-constructor-found-for-type-simple-type-class
	 * full, and partial (for derived classes)
	 *
	 */
	public CurrentCallResponse ()
	{
	   // For Jackson ObjectMapper's sanity!
		super ("CurrentCallResponse");
	}
	public CurrentCallResponse (String _callTechnology, String _handoverTechnology, String _handoverNumber, String _metadata)
	{
		super ("CurrentCallResponse");
		this.callTechnology     = _callTechnology;
		this.handoverTechnology = _handoverTechnology;
		this.handoverNumber     = _handoverNumber;
		this.metadata           = _metadata;
	}
	/*
	 * Setters
	 */
	@JsonProperty ("callTechnology")
	public void setCallTechnology (String _callTechnology)
	{
		this.callTechnology = _callTechnology;
	}


	@JsonProperty ("handoverTechnology")
	public void setHandoverTechnology (String _handoverTechnology)
	{
		this.handoverTechnology = _handoverTechnology;
	}


	@JsonProperty ("handoverNumber")
	public void setHandoverNumber (String _handoverNumber)
	{
		this.handoverNumber = _handoverNumber;
	}


	@JsonProperty ("metadata")
	public void setMetadata (String _metadata)
	{
		this.metadata = _metadata;
	}


	/*
	 * Getters
	 */
	@JsonProperty ("callTechnology")
	public String getCallTechnology ()
	{
		return this.callTechnology;
	}


	@JsonProperty ("handoverTechnology")
	public String getHandoverTechnology ()
	{
		return this.handoverTechnology;
	}


	@JsonProperty ("handoverNumber")
	public String getHandoverNumber ()
	{
		return this.handoverNumber;
	}


	@JsonProperty ("metadata")
	public String getMetadata ()
	{
		return this.metadata;
	}


	/*
	 * Override of toString() to help debug, log etc.
	 */
	@Override
	public String toString ()
	{
		return "type: " + getType ()+ " " + "callTechnology: " + callTechnology+ " " + "handoverTechnology: " + handoverTechnology+ " " + "handoverNumber: " + handoverNumber+ " " + "metadata: " + metadata;
	}
}
