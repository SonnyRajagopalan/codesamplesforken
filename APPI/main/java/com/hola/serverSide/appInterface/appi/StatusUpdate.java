/*
 * Java code generated by beanGenerator.py
 * 02.12.2016
 * Sonny Rajagopalan/Pacifi, Inc.
 * Copyright, Pacifi, Inc.
 *
 * (Derived from APPIEvent object) Status update from the app. Includes current Skype, Google, VoIP, PSTN status etc. Sent from app.
 */
package com.hola.serverSide.appInterface.appi;
/*
 * Import statements 
 */
import java.util.ArrayList;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

public class StatusUpdate extends APPIEvent
{
	private String             usernameOrEmail; // The ID of the user. E.g., "srajagopalan@pacifi.net"
	private boolean            doNotDisturb; // The do not disturb status of the user. If true, you should not disturb this person.
	private boolean            voice; // Will the user accept voice calls? True/False. Optional. Default is True.
	private boolean            text; // Will the user accept text messages? True/False. Optional. Default is True.
	private boolean            video; // Will the user accept video calls? True/False. Optional. Default is True.
	private List<HandleStatus> handleStatuses; // The current status of a list of handles.


	/*
	 * Constructors
	 * Empty/default (see 
	 *   http://stackoverflow.com/questions/7625783/jsonmappingexception-no-suitable-constructor-found-for-type-simple-type-class
	 * full, and partial (for derived classes)
	 *
	 */
	public StatusUpdate ()
	{
	   // For Jackson ObjectMapper's sanity!
		super ("StatusUpdate");
	}
	public StatusUpdate (String _usernameOrEmail, boolean _doNotDisturb, boolean _voice, boolean _text, boolean _video, List<HandleStatus> _handleStatuses)
	{
		super ("StatusUpdate");
		this.usernameOrEmail = _usernameOrEmail;
		this.doNotDisturb    = _doNotDisturb;
		this.voice           = _voice;
		this.text            = _text;
		this.video           = _video;
		this.handleStatuses  = _handleStatuses;
	}
	/*
	 * Setters
	 */
	@JsonProperty ("usernameOrEmail")
	public void setUsernameOrEmail (String _usernameOrEmail)
	{
		this.usernameOrEmail = _usernameOrEmail;
	}


	@JsonProperty ("doNotDisturb")
	public void setDoNotDisturb (boolean _doNotDisturb)
	{
		this.doNotDisturb = _doNotDisturb;
	}


	@JsonProperty ("voice")
	public void setVoice (boolean _voice)
	{
		this.voice = _voice;
	}


	@JsonProperty ("text")
	public void setText (boolean _text)
	{
		this.text = _text;
	}


	@JsonProperty ("video")
	public void setVideo (boolean _video)
	{
		this.video = _video;
	}


	@JsonProperty ("handleStatuses")
	public void setHandleStatuses (List<HandleStatus> _handleStatuses)
	{
		this.handleStatuses = _handleStatuses;
	}


	/*
	 * Getters
	 */
	@JsonProperty ("usernameOrEmail")
	public String getUsernameOrEmail ()
	{
		return this.usernameOrEmail;
	}


	@JsonProperty ("doNotDisturb")
	public boolean getDoNotDisturb ()
	{
		return this.doNotDisturb;
	}


	@JsonProperty ("voice")
	public boolean getVoice ()
	{
		return this.voice;
	}


	@JsonProperty ("text")
	public boolean getText ()
	{
		return this.text;
	}


	@JsonProperty ("video")
	public boolean getVideo ()
	{
		return this.video;
	}


	@JsonProperty ("handleStatuses")
	public List<HandleStatus> getHandleStatuses ()
	{
		return this.handleStatuses;
	}


	/*
	 * Override of toString() to help debug, log etc.
	 */
	@Override
	public String toString ()
	{

		String list0Str="[";
		for (HandleStatus var: handleStatuses) 
		{
			list0Str += var.toString () + ", ";
		}
		list0Str += "]";
		return "type: " + getType ()+ " " + "usernameOrEmail: " + usernameOrEmail+ " " + "doNotDisturb: " + doNotDisturb+ " " + "voice: " + voice+ " " + "text: " + text+ " " + "video: " + video+ " " + "handleStatuses: " + list0Str;
	}
}
