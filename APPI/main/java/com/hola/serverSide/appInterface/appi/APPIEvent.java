/*
 * Java code generated by beanGenerator.py
 * 02.12.2016
 * Sonny Rajagopalan/Pacifi, Inc.
 * Copyright, Pacifi, Inc.
 *
 * Generic base class for message events from the HAPPI peers (app and HAPPI server).
 */
package com.hola.serverSide.appInterface.appi;
/*
 * Import statements 
 */
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.annotation.JsonProperty;

public class APPIEvent
{
	private String type; // Type of the message
    protected static final ObjectMapper objectMapper = new ObjectMapper ();

	/*
	 * Constructors
	 * Empty/default (see 
	 *   http://stackoverflow.com/questions/7625783/jsonmappingexception-no-suitable-constructor-found-for-type-simple-type-class
	 * full, and partial (for derived classes)
	 *
	 */
	public APPIEvent ()
	{
	   // For Jackson ObjectMapper's sanity!
	}
	public APPIEvent (String _type)
	{
		this.type = _type;
	}
	/*
	 * Setters
	 */
	@JsonProperty ("type")
	public void setType (String _type)
	{
		this.type = _type;
	}


	/*
	 * Getters
	 */
	@JsonProperty ("type")
	public String getType ()
	{
		return this.type;
	}

	/*
	 * Override of toString() to help debug, log etc.
	 */
	@Override
	public String toString ()
	{
		return "type: " + type;
	}
	/*
	 * get JSON string object
	 */
	public String toJsonString ()
	{
	    //ObjectMapper mapper = new ObjectMapper ();
		String thisBeanAsJson = null;
		try
		{
			thisBeanAsJson = objectMapper.writeValueAsString (this);
		}
		catch (JsonProcessingException e)
		{
			e.printStackTrace ();
		}
		finally
		{
			return thisBeanAsJson;
		}
	}
}
