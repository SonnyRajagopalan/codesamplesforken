import java.text.SimpleDateFormat
import java.util.Date

def getCurrentTimestamp () {
  Date today = new Date ()
  SimpleDateFormat df = new SimpleDateFormat ("MM-dd-yyyy_hh-mm")
  return df.format (today)
}
apply plugin: 'java'
apply plugin: 'war'

repositories {
    jcenter()
}

dependencies {
  //Removed the following three lines that pertain to slf4j and log4j because jetty config doesn't like 
  // this here. See  http://www.slf4j.org/codes.html#multiple_bindings
  // The other error I got was 
  // java.lang.LinkageError: loader constraint violation: when resolving method 
  // "org.slf4j.impl.StaticLoggerBinder.getLoggerFactory()Lorg/slf4j/ILoggerFactory;" the class 
  // loader (instance of org/eclipse/jetty/webapp/WebAppClassLoader) of the current class, 
  // org/slf4j/LoggerFactory, and the class loader (instance of org/eclipse/jetty/start/Classpath$Loader) 
  // for the method's defining class, org/slf4j/impl/StaticLoggerBinder, have different Class objects for 
  // the type org/slf4j/ILoggerFactory used in the signature
  // I took the above to mean that it is really just best if we let jetty handle the logging.


  // For WebSocketServerConnection so I can use getRemoteAddress ()
  compile 'org.eclipse.jetty.websocket:javax-websocket-client-impl:9.3.6.v20151106'
  // compile 'org.eclipse.jetty.websocket:websocket-server:9.3.6.v20151106'
  compile 'org.eclipse.jetty.websocket:websocket-common:9.1.0.v20131115'
  // End so I can use getRemoteAddress ()
  // So I can get BasicServerEndpointConfig
  //compile 'org.eclipse.jetty.websocket:javax-websocket-server-impl:9.3.7.v20160115'
  // End so I can get BasicServerEndpointConfig
  compile 'com.stormpath.sdk:stormpath-servlet-plugin:1.0.RC8.2'
  compile 'org.eclipse.jetty:jetty-security:9.3.6.v20151106'
  compile 'org.eclipse.jetty:jetty-jaas:9.3.6.v20151106'
  compile 'org.eclipse.jetty:jetty-util:9.3.6.v20151106' // Needed for Credential in HolaLoginModule
  compile 'org.slf4j:slf4j-api:1.7.16'
  compile 'org.slf4j:slf4j-log4j12:1.7.16' 
  compile 'log4j:log4j:1.2.17'
  compile 'com.fasterxml.jackson.core:jackson-core:2.4.6'
  compile 'com.fasterxml.jackson.core:jackson-databind:2.4.6'
  compile 'com.fasterxml.jackson.core:jackson-annotations:2.4.6'
  compile 'javax:javaee-api:7.0'
  compile 'javax.websocket:javax.websocket-api:1.1'
  compile 'com.zaxxer:HikariCP-parent:2.3.13'
  compile 'com.zaxxer:HikariCP:2.4.3'
  compile 'mysql:mysql-connector-java:5.1.38'
  compile 'org.apache.commons:commons-lang3:3.4'
  compile 'commons-dbutils:commons-dbutils:1.6'
  compile 'io.nextop:java-common:0.1.4'
}

war.doFirst {
  ant.buildnumber()
  manifest {
    attributes(
      'Implementation-Version': ant.antProject.properties['build.number']
    )
  }
}

 compileJava {
     options.compilerArgs << '-Xlint:unchecked,deprecation'
 }
configurations.runtime {
    //exclude module: 'slf4j-log4j12'
    //exclude module: 'slf4j-api'
}
task backup (type: Tar) {
  from 'src/', 'build.gradle'
  destinationDir = new File ("/projects/hola/appi/")
  compression = Compression.GZIP
  if (project.hasProperty ('tarTag'))
   {
     baseName 'appiBackup-'+tarTag
   }
   else
   {
     baseName 'appiBackup'		
   }
  classifier getCurrentTimestamp ()
  extension 'tgz'
}

